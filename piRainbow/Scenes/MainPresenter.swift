//
//  MainPresenter.swift
//  piRainbow
//
//  Created by Antonio Gonzalez Hidalgo on 23/05/2020.
//  Copyright (c) 2020 Antonio Gonzalez Hidalgo. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MainPresentationLogic {
  func presentPiComponents(response: Main.PiNumbers.Response)
}

class MainPresenter: MainPresentationLogic {

  weak var viewController: MainDisplayLogic?

  private func getPiColors(from components: [CGFloat]) -> [PiColor] {

    var index = 1
    var red: CGFloat = 0
    var green: CGFloat = 0
    var blue: CGFloat = 0
    var colors: [PiColor] = []
    for component in components {

      switch index {
      case 1:
        red = component
      case 2:
        green = component
      case 3:
        blue = component
        colors.append(PiColor(red: red, green: green, blue: blue))
        index = 0
      default:
        break
      }
      index += 1
    }
    return colors
  }

  // MARK: MainPresentationLogic

  func presentPiComponents(response: Main.PiNumbers.Response) {
    let colors = getPiColors(from: response.components)
    let viewModel = Main.PiNumbers.ViewModel(colors: colors)
    viewController?.displayPiColors(viewModel: viewModel)
  }

}
